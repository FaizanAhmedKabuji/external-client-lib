plugins {
	id 'java-library'
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'maven-publish'
}

// Configure as library, not application
jar {
	enabled = true
	archiveClassifier = '' // Remove classifier for main jar
}

// Disable bootJar for library
bootJar {
	enabled = false
}

group = 'com.alifa'
version = '0.0.1'
description = 'external client'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

// Publishing configuration for library distribution
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}
	repositories {
		maven {
			name = "GitHubPackages"
			url = uri("https://maven.pkg.github.com/FaizanAhmedKabuji/external-client-lib")
			credentials {
				username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_USERNAME")
				password = project.findProperty("gpr.token") ?: System.getenv("GITHUB_TOKEN")
			}
		}
	}
}

// Suppress validation for dependencies without versions
tasks.withType(GenerateModuleMetadata) {
	suppressedValidationErrors.add('dependencies-without-versions')
}
